{"version":3,"file":"static/js/195.60708d98.chunk.js","mappings":"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","sources":["views/tic-tac-toe.jsx"],"sourcesContent":["import React from 'react'\nimport './tic-tac-toe.less'\nimport { Button } from 'antd'\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClickButton}>\n            {props.value}\n        </button>\n    )\n}\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        return <Square value={this.props.squares[i]} onClickButton={() => this.props.onClick(i)} />\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        )\n    }\n}\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ]\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i]\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            console.log(a, b, c)\n            return squares[a]\n        }\n    }\n    return null\n}\nclass Game extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            history: [\n                {\n                    squares: Array(9).fill(null),\n                },\n            ],\n            xIsNext: true,\n            stepNumber: 0,\n        }\n    }\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1)\n        const current = history[history.length - 1]\n        const squares = current.squares.slice()\n        if (calculateWinner(squares) || squares[i]) {\n            return\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O'\n        this.setState({\n            history: history.concat([\n                {\n                    squares: squares,\n                },\n            ]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext,\n        })\n    }\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: step % 2 === 0,\n        })\n    }\n    render() {\n        const history = this.state.history\n        const current = history[this.state.stepNumber]\n        const winner = calculateWinner(current.squares)\n        const moves = history.map((step, move) => {\n            const desc = move ? 'Go to move #' + move : 'Go to game start'\n            return (\n                <li key={move}>\n                    <Button type=\"primary\" onClick={() => this.jumpTo(move)}>\n                        {desc}\n                    </Button>\n                </li>\n            )\n        })\n        let status\n        if (winner) {\n            status = 'Winner: ' + winner\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\n        }\n        return (\n            <div className=\"tic-tac-toe\">\n                <div className=\"game-board\">\n                    <Board squares={current.squares} onClick={(i) => this.handleClick(i)} />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Game\n"],"names":["Square","props","className","onClick","onClickButton","value","Board","i","this","squares","renderSquare","React","calculateWinner","lines","length","a","b","c","console","log","Game","state","history","Array","fill","xIsNext","stepNumber","slice","setState","concat","step","status","current","winner","moves","map","move","desc","type","jumpTo","handleClick"],"sourceRoot":""}